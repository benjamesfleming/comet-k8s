---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }} 
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.replicas | default 1 }}
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: {{ .Release.Name }} 
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }} 
            topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: setup-cfg
        image: ghcr.io/cometbackup/comet-server:23.5
        command: ["/bin/bash", "-c"]
        args:
        -
          set -eu;

          chown -R 100:101 /var/lib/cometd;
          chown -R 100:101 /var/log/cometd;

          if [[ ! -f /var/lib/cometd/cometd.cfg ]]; then
            apt install -y jq curl;

            echo "Initializing cometd..." >&2;
            echo "Generating new serial number..." >&2;

            export JSON=$(curl -X POST https://account.cometbackup.com/api/v1/license/create_license -d "auth_type=password&email=${COMET_ACCOUNT_EMAIL}&password=${COMET_ACCOUNT_PASSWORD}");
            export COMET_LICENSE_SERIAL=$(echo -n "$JSON"  | jq -r '.data.serial_number' -);

            echo "$JSON" >&2;
            echo "Using serial '$COMET_LICENSE_SERIAL'..." >&2;
            echo "Applying configuration from template..." >&2;

            su -s /bin/bash -c '/opt/cometd/cometd -Instdir /opt/cometd/ -Chdir /var/lib/cometd/ -ValidateConfigOnly' cometd;
          fi
        env:
        - name: COMET_ACCOUNT_EMAIL
          valueFrom:
            secretKeyRef:
              name: comet-account-creds
              key: email
        - name: COMET_ACCOUNT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: comet-account-creds
              key: password
        volumeMounts:
        - name: cometd-data
          mountPath: /var/lib/cometd
          subPath: data
        - name: cometd-data
          mountPath: /var/log/cometd
          subPath: logs
      containers:
      - name: comet-server
        image: ghcr.io/cometbackup/comet-server:23.5
        ports:
        - name: web
          containerPort: 8060
        volumeMounts:
        - name: cometd-data
          mountPath: /var/lib/cometd
          subPath: data
        - name: cometd-data
          mountPath: /var/log/cometd
          subPath: logs
  volumeClaimTemplates:
  - metadata:
      name: cometd-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "longhorn"
      resources:
        requests:
          storage: 32Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  clusterIP: None
  selector:
    app: {{ .Release.Name }}